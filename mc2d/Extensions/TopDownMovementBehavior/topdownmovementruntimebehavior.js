var gdjs;(function(h){class u extends h.RuntimeBehavior{constructor(e,t,n){super(e,t,n);this._angle=0;this._x=0;this._y=0;this._xVelocity=0;this._yVelocity=0;this._angularSpeed=0;this._leftKey=!1;this._rightKey=!1;this._upKey=!1;this._downKey=!1;this._leftKeyPressedDuration=0;this._rightKeyPressedDuration=0;this._upKeyPressedDuration=0;this._downKeyPressedDuration=0;this._wasStickUsed=!1;this._stickAngle=0;this._stickForce=0;this._temporaryPointForTransformations=[0,0];this._allowDiagonals=t.allowDiagonals,this._acceleration=t.acceleration,this._deceleration=t.deceleration,this._maxSpeed=t.maxSpeed,this._angularMaxSpeed=t.angularMaxSpeed,this._rotateObject=t.rotateObject,this._angleOffset=t.angleOffset,this._ignoreDefaultControls=t.ignoreDefaultControls,this.setViewpoint(t.viewpoint,t.customIsometryAngle),this._movementAngleOffset=t.movementAngleOffset||0}updateFromBehaviorData(e,t){return e.allowDiagonals!==t.allowDiagonals&&(this._allowDiagonals=t.allowDiagonals),e.acceleration!==t.acceleration&&(this._acceleration=t.acceleration),e.deceleration!==t.deceleration&&(this._deceleration=t.deceleration),e.maxSpeed!==t.maxSpeed&&(this._maxSpeed=t.maxSpeed),e.angularMaxSpeed!==t.angularMaxSpeed&&(this._angularMaxSpeed=t.angularMaxSpeed),e.rotateObject!==t.rotateObject&&(this._rotateObject=t.rotateObject),e.angleOffset!==t.angleOffset&&(this._angleOffset=t.angleOffset),e.ignoreDefaultControls!==t.ignoreDefaultControls&&(this._ignoreDefaultControls=t.ignoreDefaultControls),(e.platformType!==t.platformType||e.customIsometryAngle!==t.customIsometryAngle)&&this.setViewpoint(t.platformType,t.customIsometryAngle),e.movementAngleOffset!==t.movementAngleOffset&&(this._movementAngleOffset=t.movementAngleOffset),!0}setViewpoint(e,t){e==="PixelIsometry"?this._basisTransformation=new h.TopDownMovementRuntimeBehavior.IsometryTransformation(Math.atan(.5)):e==="TrueIsometry"?this._basisTransformation=new h.TopDownMovementRuntimeBehavior.IsometryTransformation(Math.PI/6):e==="CustomIsometry"?this._basisTransformation=new h.TopDownMovementRuntimeBehavior.IsometryTransformation(t*Math.PI/180):this._basisTransformation=null}setAcceleration(e){this._acceleration=e}getAcceleration(){return this._acceleration}setDeceleration(e){this._deceleration=e}getDeceleration(){return this._deceleration}setMaxSpeed(e){this._maxSpeed=e}getMaxSpeed(){return this._maxSpeed}setAngularMaxSpeed(e){this._angularMaxSpeed=e}getAngularMaxSpeed(){return this._angularMaxSpeed}setAngleOffset(e){this._angleOffset=e}getAngleOffset(){return this._angleOffset}allowDiagonals(e){this._allowDiagonals=e}diagonalsAllowed(){return this._allowDiagonals}setRotateObject(e){this._rotateObject=e}isObjectRotated(){return this._rotateObject}isMoving(){return this._xVelocity!==0||this._yVelocity!==0}getSpeed(){return Math.sqrt(this._xVelocity*this._xVelocity+this._yVelocity*this._yVelocity)}getXVelocity(){return this._xVelocity}setXVelocity(e){this._xVelocity=e}getYVelocity(){return this._yVelocity}setYVelocity(e){this._yVelocity=e}getAngle(){return this._angle}setMovementAngleOffset(e){this._movementAngleOffset=e}getMovementAngleOffset(){return this._movementAngleOffset}doStepPreEvents(e){const t=37,n=38,y=39,c=40;this._leftKey|=!this._ignoreDefaultControls&&e.getGame().getInputManager().isKeyPressed(t),this._rightKey|=!this._ignoreDefaultControls&&e.getGame().getInputManager().isKeyPressed(y),this._downKey|=!this._ignoreDefaultControls&&e.getGame().getInputManager().isKeyPressed(c),this._upKey|=!this._ignoreDefaultControls&&e.getGame().getInputManager().isKeyPressed(n);const r=this.owner.getElapsedTime(e);this._leftKey?this._leftKeyPressedDuration+=r:this._leftKeyPressedDuration=0,this._rightKey?this._rightKeyPressedDuration+=r:this._rightKeyPressedDuration=0,this._downKey?this._downKeyPressedDuration+=r:this._downKeyPressedDuration=0,this._upKey?this._upKeyPressedDuration+=r:this._upKeyPressedDuration=0;let s=-1;this._allowDiagonals?this._upKey&&!this._downKey?this._leftKey&&!this._rightKey?s=5:!this._leftKey&&this._rightKey?s=7:s=6:!this._upKey&&this._downKey?this._leftKey&&!this._rightKey?s=3:!this._leftKey&&this._rightKey?s=1:s=2:this._leftKey&&!this._rightKey?s=4:!this._leftKey&&this._rightKey&&(s=0):(this._upKey&&!this._downKey?s=6:!this._upKey&&this._downKey&&(s=2),this._leftKey&&!this._rightKey&&(this._upKey===this._downKey||this._upKey&&this._leftKeyPressedDuration<this._upKeyPressedDuration||this._downKey&&this._leftKeyPressedDuration<this._downKeyPressedDuration)?s=4:this._rightKey&&!this._leftKey&&(this._upKey===this._downKey||this._upKey&&this._rightKeyPressedDuration<this._upKeyPressedDuration||this._downKey&&this._rightKeyPressedDuration<this._downKeyPressedDuration)&&(s=0));const _=this.owner,f=this.owner.getElapsedTime(e)/1e3,K=this._xVelocity,x=this._yVelocity;this._wasStickUsed=!1;let a=0,g=0,i=1,o=0;if(s!==-1)a=(s+this._movementAngleOffset/45)*Math.PI/4,g=s*45+this._movementAngleOffset,i=Math.cos(a),o=Math.sin(a),(i===-1||i===1)&&(o=0),(o===-1||o===1)&&(i=0),this._xVelocity+=this._acceleration*f*i,this._yVelocity+=this._acceleration*f*o;else if(this._stickForce!==0){this._allowDiagonals||(this._stickAngle=90*Math.floor((this._stickAngle+45)/90)),g=this._stickAngle+this._movementAngleOffset,a=g*Math.PI/180;const l=this._acceleration*f*this._stickForce;i=Math.cos(a),o=Math.sin(a),(i===-1||i===1)&&(o=0),(o===-1||o===1)&&(i=0),this._xVelocity+=l*i,this._yVelocity+=l*o,this._wasStickUsed=!0,this._stickForce=0}else if(this._yVelocity!==0||this._xVelocity!==0){a=Math.atan2(this._yVelocity,this._xVelocity),g=a*180/Math.PI;const l=this._xVelocity>=0,M=this._yVelocity>=0;i=Math.cos(a),o=Math.sin(a),(i===-1||i===1)&&(o=0),(o===-1||o===1)&&(i=0),this._xVelocity-=this._deceleration*f*i,this._yVelocity-=this._deceleration*f*o,this._xVelocity>0!==l&&(this._xVelocity=0),this._yVelocity>0!==M&&(this._yVelocity=0)}this._xVelocity*this._xVelocity+this._yVelocity*this._yVelocity>this._maxSpeed*this._maxSpeed&&(this._xVelocity=this._maxSpeed*i,this._yVelocity=this._maxSpeed*o),this._angularSpeed=this._angularMaxSpeed;const p=(K+this._xVelocity)/2*f,d=(x+this._yVelocity)/2*f;if(this._basisTransformation===null)_.setX(_.getX()+p),_.setY(_.getY()+d);else{const l=this._temporaryPointForTransformations;l[0]=p,l[1]=d,this._basisTransformation.toScreen(l,l),_.setX(_.getX()+l[0]),_.setY(_.getY()+l[1])}(this._xVelocity!==0||this._yVelocity!==0)&&(this._angle=g,this._rotateObject&&_.rotateTowardAngle(g+this._angleOffset,this._angularSpeed,e)),this._leftKey=!1,this._rightKey=!1,this._upKey=!1,this._downKey=!1}simulateControl(e){e==="Left"?this._leftKey=!0:e==="Right"?this._rightKey=!0:e==="Up"?this._upKey=!0:e==="Down"&&(this._downKey=!0)}ignoreDefaultControls(e){this._ignoreDefaultControls=e}simulateLeftKey(){this._leftKey=!0}simulateRightKey(){this._rightKey=!0}simulateUpKey(){this._upKey=!0}simulateDownKey(){this._downKey=!0}simulateStick(e,t){this._stickAngle=e%360,this._stickForce=Math.max(0,Math.min(1,t))}isUsingControl(e){return e==="Left"?this._leftKeyPressedDuration>0:e==="Right"?this._rightKeyPressedDuration>0:e==="Up"?this._upKeyPressedDuration>0:e==="Down"?this._downKeyPressedDuration>0:e==="Stick"?this._wasStickUsed:!1}getLastStickInputAngle(){return this._stickAngle}}h.TopDownMovementRuntimeBehavior=u,function(e){class m{constructor(n){if(n<=0||n>=Math.PI/4)throw new RangeError("An isometry angle must be in ]0; pi/4] but was: "+n);const y=Math.asin(Math.tan(n)),c=Math.sin(y),r=Math.cos(Math.PI/4),s=r;this._screen=[[r,-s],[c*s,c*r]]}toScreen(n,y){const c=this._screen[0][0]*n[0]+this._screen[0][1]*n[1],r=this._screen[1][0]*n[0]+this._screen[1][1]*n[1];y[0]=c,y[1]=r}}e.IsometryTransformation=m}(u=h.TopDownMovementRuntimeBehavior||(h.TopDownMovementRuntimeBehavior={})),h.registerBehavior("TopDownMovementBehavior::TopDownMovementBehavior",h.TopDownMovementRuntimeBehavior)})(gdjs||(gdjs={}));
//# sourceMappingURL=topdownmovementruntimebehavior.js.map
